{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\padma\\\\OneDrive\\\\Documents\\\\CS648\\\\Assignment-13\\\\src\\\\Products.js\";\nimport React, { Component } from 'react';\nimport Filters from './Filters';\nimport ProductTable from './ProductTable';\nimport ProductForm from './ProductForm';\nlet PRODUCTS = {};\n\nclass Products extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      filterText: '',\n      products: PRODUCTS\n    };\n    this.handleFilter = this.handleFilter.bind(this);\n    this.handleDestroy = this.handleDestroy.bind(this);\n    this.handleSave = this.handleSave.bind(this);\n    this.handleUpdate = this.handleUpdate.bind(this);\n    this.populateForm = this.populateForm.bind(this);\n    this.child = React.createRef();\n  }\n\n  componentDidMount() {\n    //For fetching the products\n    fetch(\"/product/get\").then(data => data.json()).then(data => this.setState({\n      products: data\n    }));\n  }\n\n  handleFilter(filterInput) {\n    this.setState(filterInput);\n  }\n\n  handleSave(product) {\n    product.productid = new Date().getTime();\n    product.instock = true; //For setting the new product to the state\n\n    this.setState(prevState => {\n      let products = prevState.products;\n      products[product.productid] = product;\n      return {\n        products\n      };\n    });\n    var data = {\n      'product': product,\n      'id': product.productid\n    };\n    fetch('/product/create', {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    }).then(response => {\n      console.log(response);\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  handleDestroy(productId) {\n    //For updating the state after deletion\n    this.setState(prevState => {\n      let products = prevState.products;\n      delete products[productId];\n      return {\n        products\n      };\n    }); //For Deleting the product\n\n    fetch(\"/product/delete/\".concat(productId), {\n      method: 'DELETE',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      console.log(response);\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  populateForm(productId) {\n    console.log(\"Update this \" + productId);\n    let productToUpdate = this.state.products[productId];\n    this.child.current.fillForm(productToUpdate);\n  }\n\n  handleUpdate(updatedProduct) {\n    console.log(\"Updated\");\n    console.log(updatedProduct);\n    this.setState(prevState => {\n      let products = prevState.products;\n      products[updatedProduct.productid] = updatedProduct;\n      return {\n        products\n      };\n    }); //Persist the product in Mongodb\n\n    var productId = updatedProduct.productid;\n    var data = {\n      'product': updatedProduct,\n      'id': productId\n    };\n    fetch(\"/product/update/\".concat(productId), {\n      method: 'PUT',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    }).then(response => {\n      console.log(response);\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"My Inventory\"), React.createElement(Filters, {\n      onFilter: this.handleFilter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }), React.createElement(ProductTable, {\n      products: this.state.products,\n      filterText: this.state.filterText,\n      onDestroy: this.handleDestroy,\n      onModify: this.populateForm,\n      onUpdate: this.handleUpdate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }), React.createElement(ProductForm, {\n      onUpdate: this.handleUpdate,\n      onSave: this.handleSave,\n      ref: this.child,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Products;","map":{"version":3,"sources":["C:/Users/padma/OneDrive/Documents/CS648/Assignment-13/src/Products.js"],"names":["React","Component","Filters","ProductTable","ProductForm","PRODUCTS","Products","constructor","props","state","filterText","products","handleFilter","bind","handleDestroy","handleSave","handleUpdate","populateForm","child","createRef","componentDidMount","fetch","then","data","json","setState","filterInput","product","productid","Date","getTime","instock","prevState","method","headers","Accept","body","JSON","stringify","response","console","log","catch","error","productId","productToUpdate","current","fillForm","updatedProduct","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport Filters from './Filters'\r\nimport ProductTable from './ProductTable'\r\nimport ProductForm from './ProductForm'\r\nlet PRODUCTS = {};\r\nclass Products extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            filterText: '',\r\n            products: PRODUCTS\r\n        }\r\n        this.handleFilter = this.handleFilter.bind(this)\r\n        this.handleDestroy = this.handleDestroy.bind(this)\r\n        this.handleSave = this.handleSave.bind(this)\r\n        this.handleUpdate = this.handleUpdate.bind(this)\r\n        this.populateForm = this.populateForm.bind(this)\r\n        this.child = React.createRef();\r\n    }\r\n    componentDidMount(){\r\n        //For fetching the products\r\n        fetch(`/product/get`)\r\n        .then(data => data.json())\r\n        .then(data => this.setState({products:data}))\r\n    }\r\n    handleFilter(filterInput) {\r\n        this.setState(filterInput)\r\n    }\r\n    handleSave(product) {\r\n        product.productid = new Date().getTime()\r\n        product.instock = true;\r\n        //For setting the new product to the state\r\n        this.setState((prevState) => {\r\n            let products = prevState.products\r\n            products[product.productid] = product\r\n            return { products }\r\n        })\r\n        var data = {'product' : product, 'id': product.productid}\r\n        fetch('/product/create',{\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                        'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(data)\r\n        }).then(response => {\r\n            console.log(response)\r\n        })\r\n        .catch(error =>{\r\n            console.log(error)\r\n        })\r\n    }\r\n    handleDestroy(productId) {\r\n        //For updating the state after deletion\r\n        this.setState((prevState) => {\r\n            let products = prevState.products\r\n            delete products[productId]\r\n            return { products }\r\n        });\r\n        //For Deleting the product\r\n        fetch(`/product/delete/${productId}`,{\r\n            method: 'DELETE',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                        'Content-Type': 'application/json',\r\n            }\r\n        }).then(response => {\r\n            console.log(response)\r\n        })\r\n        .catch(error =>{\r\n            console.log(error)\r\n        })\r\n    }\r\n    populateForm(productId) {\r\n        console.log(\"Update this \"+productId)\r\n        let productToUpdate = this.state.products[productId]\r\n        this.child.current.fillForm(productToUpdate);\r\n    }\r\n    handleUpdate(updatedProduct) {\r\n        console.log(\"Updated\")\r\n        console.log(updatedProduct)\r\n        this.setState((prevState) => {\r\n            let products = prevState.products\r\n            products[updatedProduct.productid] = updatedProduct\r\n            return { products }\r\n        });\r\n        //Persist the product in Mongodb\r\n        var productId = updatedProduct.productid;\r\n        var data = {'product' : updatedProduct, 'id': productId}\r\n        fetch(`/product/update/${productId}`,{\r\n            method: 'PUT',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                        'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(data)\r\n        }).then(response => {\r\n            console.log(response)\r\n        })\r\n        .catch(error =>{\r\n            console.log(error)\r\n        })\r\n    }\r\n    render () {\r\n        return (\r\n            <div>\r\n                <h1>My Inventory</h1>\r\n                <Filters \r\n                    onFilter={this.handleFilter}></Filters>\r\n                <ProductTable \r\n                    products={this.state.products}\r\n                    filterText={this.state.filterText}\r\n                    onDestroy={this.handleDestroy}\r\n                    onModify={this.populateForm}\r\n                    onUpdate={this.handleUpdate}>\r\n                </ProductTable>\r\n                <ProductForm\r\n                    onUpdate={this.handleUpdate}\r\n                    onSave={this.handleSave}\r\n                    ref={this.child}></ProductForm>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Products"]},"metadata":{},"sourceType":"module"}